apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "yet-another-cloudwatch-exporter.fullname" . }}
  labels:
    {{- include "yet-another-cloudwatch-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "yet-another-cloudwatch-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{ if .Values.aws.role}}iam.amazonaws.com/role: {{ .Values.aws.role }}{{ end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "yet-another-cloudwatch-exporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "yet-another-cloudwatch-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "yace"
            - "--config.file=/config/config.yml"
            {{- range $key, $value := .Values.extraArgs }}
            - --{{ $key }}={{ $value }}
            {{- end }}
          volumeMounts:
            - name: vol-yet-another-cloudwatch-exporter
              mountPath: /config
        {{- if not .Values.aws.role }}
        {{- if .Values.aws.secret.name }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: access_key
                  name: {{ .Values.aws.secret.name }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: secret_key
                  name: {{ .Values.aws.secret.name }}
          {{- if .Values.aws.secret.includesSessionToken }}
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  key: security_token
                  name: {{ .Values.aws.secret.name }}
          {{- end }}
          {{- else if and .Values.aws.aws_secret_access_key .Values.aws.aws_access_key_id }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: aws_access_key_id
                  name: {{ include "yet-another-cloudwatch-exporter.fullname" . }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: aws_secret_access_key
                  name: {{ include "yet-another-cloudwatch-exporter.fullname" . }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ include "yet-another-cloudwatch-exporter.fullname" . }}
        name: vol-yet-another-cloudwatch-exporter
